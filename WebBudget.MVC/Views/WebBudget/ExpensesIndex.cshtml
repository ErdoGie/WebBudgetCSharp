@model WebBudget.Application.WebBudget.Commands.CategoryViewModels.CreateExpenseView



@{
	ViewData["Title"] = "ExpensesIndex";
	Layout = "~/Views/Shared/_Layout.cshtml";

}
@section containerContent  {
	<h4>Your expenses</h4>
	<hr />


	<div class="d-flex justify-content-center">
		<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addExpenseModal">
			Add Expense
		</button>
	</div>

	<div id="addExpenseModal" class="modal fade" role="dialog">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="addExpenseModalLabel">Add Expense</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form asp-action="CreateExpense">
						<div class="form-group">
							<label for="ExpenseCommand.ExpenseType" class="control-label" style="color:white ;margin-top:4%">Category</label>
							<div class="form-group">
								@if (Model.ExpenseCommand.ExpenseCategories.Any())
								{
									<select id="ExpenseCommand.ExpenseType" name="ExpenseCommand.ExpenseType" class="form-control" required>
										<option style="text-align:center" value="" selected disabled>Choose expense category</option>
										@foreach (var category in Model.ExpenseCommand.ExpenseCategories)
										{
											<option style="text-align:center" value="@category.CategoryName">@category.CategoryName</option>
										}
									</select>
								}
								else
								{
									<select id="ExpenseCommand.ExpenseType" name="ExpenseCommand.ExpenseType" class="form-control">
										<option class="text-muted" selected disabled>No category available. Add some first.</option>
									</select>
								}
								<span class="text-danger" id="categoryValidationMessage"></span>
							</div>
						</div>

						<div class="form-group">
							<label for="ExpenseCommand.ExpenseDate" class="control-label" style="color:white; margin-top:5%">Date</label>
							<input id="ExpenseCommand.ExpenseDate" style="text-align:center" name="ExpenseCommand.ExpenseDate" class="form-control" type="date" required />
							<span class="text-danger" id="dateValidationMessage"></span>
						</div>
						<div class="form-group">
							<label for="ExpenseCommand.ExpenseValue" class="control-label" style="color:white ;margin-top:4%">Value</label>
							<input id="ExpenseCommand.ExpenseValue" name="ExpenseCommand.ExpenseValue" style="text-align:center" class="form-control" type="number" required />

							<span id="valueError" class="text-danger" style="display: none;">Value must be greater than zero</span>
						</div>

						<div class="form-group d-flex justify-content-center">
							<input type="submit" value="Create Expense!" class="btn btn-primary" id="createButton" style="margin-top:4%" disabled  />
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>

	<div class="row">
		@foreach (var income in Model.Expenses)
		{
			<div class="col-md-6 col-lg-4 small-card">
				<div class="card m-3 small-card">
					<div class="card-body">
						<h6 class="card-title"> @income.ExpenseType</h6>
						<h6 class="card-subtitle mb-2 text-muted">@income.ExpenseDate.ToString("yyyy-MM-dd")</h6>
						<h6 class="card-title"> @income.ExpenseValue zł</h6>
						<button type="button" class="btn btn-info edit-btn" data-toggle="modal" data-target="#editExpenseModal" data-income-id="@income.ExpenseId">Edit</button>
						<button type="button" class="btn btn-danger delete-btn" data-toggle="modal" data-target="#deleteExpenseModal" delete-income-id="@income.ExpenseId">Delete</button>
					</div>
				</div>
			</div>
		}
	</div>

	<!-- Edit Modal -->
	<div class="modal fade" id="editExpenseModal" tabindex="-1" role="dialog" aria-labelledby="editExpenseModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="editModalLabel">Edit Income</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<form id="editExpenseForm" asp-action="ExpenseEdit" method="post">
						<div asp-validation-summary="ModelOnly" class="text-danger"></div>

						<div class="form-group">
							<label for="ExpenseType" class="control-label" style="color:white">Category</label>
							<select id="ExpenseType" name="ExpenseType" style="text-align:center" class="form-control" required>
								<option value="" selected disabled>Choose income category</option>
								@foreach (var category in Model.ExpenseCommand.ExpenseCategories)
								{
									<option value="@category.CategoryName" data-category-id="@category.CategoryId">@category.CategoryName</option>
								}
							</select>
						</div>
						<input type="hidden" id="IncomeId" name="IncomeId" value="" />

						<input type="hidden" id="IncomeCategoryId" name="IncomeCategoryId" value="" />

						<div class="form-group">
							<label for="ExpenseDate" class="control-label" style="color:white">Date</label>
							<input id="ExpenseDate" style="text-align:center" name="ExpenseDate" class="form-control" type="date" required />
							<span class="text-danger" id="dateValidationMessage"></span>
						</div>

						<div class="form-group">
							<label for="ExpenseValue" class="control-label" style="color:white">Value</label>
							<input id="ExpenseValue" name="ExpenseValue" class="form-control" style="text-align:center" type="number" required />
						</div>


						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
							<button type="submit" class="btn btn-primary" id="EditIncomeBtn">Save Changes</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>

	<!-- Delete Modal -->

	<div class="modal fade" id="deleteExpenseModal" tabindex="-1" role="dialog" aria-labelledby="deleteExpenseModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header text-center">
					<h5 class="modal-title mx-auto" id="deleteModalLabel">Confirm Deletion</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body" style="color:white">
					Are you sure you want to delete this expense?
					<form id="deleteExpenseForm" asp-action="ExpenseDelete" method="post">
						<input type="hidden" id="DeleteExpense" name="ExpenseId" value="" />
					</form>
				</div>
				<div class="modal-footer mx-auto">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-danger" id="ConfirmDelete">Delete</button>
				</div>
			</div>
		</div>
	</div>


  }

@section scripts {

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>
		// DELETE INCOME
		var expenseIdToDelete;

		document.querySelectorAll('.delete-btn').forEach(button => {
			button.addEventListener('click', function () {
				expenseIdToDelete = this.getAttribute('delete-income-id');
				document.getElementById('DeleteExpense').value = expenseIdToDelete;
				console.log(expenseIdToDelete);
			});
		});


		document.getElementById('ConfirmDelete').addEventListener('click', function () {
			if (expenseIdToDelete) {
				document.getElementById('DeleteExpense').value = expenseIdToDelete;
				document.getElementById('deleteExpenseForm').submit();
				expenseIdToDelete = null;
			}
			$('#deleteExpenseModal').modal('hide');
		});

		function deleteIncome(incomeId) {
			fetch(`/WebBudget/ExpenseDelete/${incomeId}`, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'X-Requested-With': 'XMLHttpRequest'
				}
			});
		}






		// AADDD EXPENSE //

		var errorSpan = document.getElementById('valueError');
		var createButton = document.getElementById('createButton');
		var valueInput = document.getElementById('ExpenseCommand.ExpenseValue');


		document.getElementById('ExpenseCommand.ExpenseType').addEventListener('change', function () {
			var selectedValue = this.value;
			var validationMessage = document.getElementById('categoryValidationMessage');

			if (!selectedValue) {
				validationMessage.textContent = 'Please choose an income category.';
				document.getElementById('SaveChangesButton').disabled = true;
			} else {
				validationMessage.textContent = '';
				document.getElementById('SaveChangesButton').disabled = true;
			}
		});
		document.getElementById('ExpenseCommand.ExpenseValue').addEventListener('input', function () {

			var value = parseFloat(valueInput.value);
			if (isNaN(value) || value <= 0) {
				errorSpan.style.display = 'inline';
			} else {
				errorSpan.style.display = 'none';
			}
		});
		var createButton = document.getElementById('createButton');

		valueInput.addEventListener('input', function () {
			var value = parseFloat(valueInput.value);
			if (isNaN(value) || value <= 0) {
				errorSpan.style.display = 'inline';
				createButton.disabled = true;
			} else {
				errorSpan.style.display = 'none';
				createButton.disabled = false;
			}
		});

	</script>
}